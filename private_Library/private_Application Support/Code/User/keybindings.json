// Place your key bindings in this file to override the defaults
[
  {
    "key": "cmd+k cmd+o",
    "command": "editor.action.openLink"
  },
  {
    "key": "ctrl+shift+cmd+c",
    "command": "workbench.action.openQuickChat.copilot"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.focusPreviousGroup",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.focusNextGroup",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "key": "cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+l",
    "command": "workbench.panel.chat",
    "when": "workbench.panel.chat.view.copilot.active"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "-workbench.panel.chat",
    "when": "workbench.panel.chat.view.copilot.active"
  },
  {
    "key": "shift+cmd+l",
    "command": "-notebook.selectAllFindMatches",
    "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+cmd+l",
    "command": "-selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "-addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "shift+cmd+l",
    "command": "github.copilot.chat.attachSelection",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "github.copilot.terminal.attachTerminalSelection",
    "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "escape",
    "command": "editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible && vim.mode == 'Insert'"
  },
  {
    "key": "escape",
    "command": "extension.vim_escape",
    "when": "textInputFocus && !inlineSuggestionVisible && vim.mode == 'Insert'"
  }
]